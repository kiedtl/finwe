// Ported from uxn-utils b64enc.rom
// https://git.sr.ht/~rabbits/uxn-utils/blob/main/cli/base64/b64enc.tal
//
// (c) 100r

(use* varvara)
(use* core)

(let queue U8)

(let MIME [U8] [
	"ABCDEFGHIJKLMNOP"
	"QRSTUVWXYZabcdef"
	"ghijklmnopqrstuv"
	"wxyz0123456789+/"
])

(word main [
	[ (--) on-console halt ] .Console/vector deo
])

(word on-console (--) [
	#noreturn
	(word terminate ( U8 -- ) [
		$queue <> (when [ 0 print-b64enc ])
		0x80 .System/state deo
		halt
	])

	.Console/read dei
	dup 0= (when [terminate])
	print-b64enc
])

(word print-b64enc (U8 -- ) [
	[ (U8 -- ) emit ] b64enc
])

(word b64enc (U8 @(Fn (U8 -- )) -- ) [
	(let fun $0)
	@fun <-

	(let inc U8)
	(let buf U8)
	@buf <-

	0x08 0x00
	(until [ (U8 U8 -- Bool) > not ] [
		$buf over 7 swap - bsft 1 band
		$inc dup 1+ 6 2dup / * - @inc <-
		// ( bit id -- )
		swap $queue bor dup + @queue <-
		5 = (when [
			$queue 1 bshr (as U16) @MIME + ->
			$fun do
			0 @queue <-
		])
		1+
	])

	2drop
])

(test b64enc [
	"Many hands make light work."
	dup -> (until [ 0= ] [
		print-b64enc
		1+ dup ->
	])

	(should stdout-eq "TWFueSBoYW5kcyBtYWtlIGxpZ2h0IHdvcmsu")
])
